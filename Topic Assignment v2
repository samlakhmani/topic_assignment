{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPWvxj6iYQ7zW0etH+6qVgx"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"wXBNd3D2Ro31","executionInfo":{"status":"ok","timestamp":1702134572762,"user_tz":0,"elapsed":651,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}}},"outputs":[],"source":["import os\n","import pandas as pd\n","import numpy as np\n","import time"]},{"cell_type":"code","source":["# Load the Drive helper and mount\n","from google.colab import drive\n","drive.mount('/content/drive')\n","os.chdir(\"/content/drive/MyDrive/Hunch2\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u04Rl0MKSjTE","executionInfo":{"status":"ok","timestamp":1702134574213,"user_tz":0,"elapsed":1453,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"5af1f478-b31d-4b50-acfa-3d14c8462ccf"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["from gensim.models import Word2Vec\n","\n","\n","from nltk.tokenize import sent_tokenize\n","from nltk.tokenize import word_tokenize\n","from nltk.corpus import stopwords\n","\n","import string\n","import nltk\n","\n","nltk.download('stopwords')\n","nltk.download('punkt')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ttTwktSR8jso","executionInfo":{"status":"ok","timestamp":1702134576085,"user_tz":0,"elapsed":1873,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"56ad1a21-d10a-4b0d-96d8-fdc988471a81"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n","[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer\n","from nltk.stem import WordNetLemmatizer\n","from nltk.corpus import stopwords\n","import nltk\n","import re"],"metadata":{"id":"Wm7YvmwNUgpy","executionInfo":{"status":"ok","timestamp":1702134576085,"user_tz":0,"elapsed":2,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["# Use NLTK stopwords\n","# Download NLTK stopwords\n","\n","stop_words = list(stopwords.words('english'))"],"metadata":{"id":"1KIkIoViFQ2I","executionInfo":{"status":"ok","timestamp":1702134576085,"user_tz":0,"elapsed":2,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv(\"data/polls.csv\")"],"metadata":{"id":"pFeDRusSSI73","executionInfo":{"status":"ok","timestamp":1702134576872,"user_tz":0,"elapsed":484,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xQyWkzfTS9LT","executionInfo":{"status":"ok","timestamp":1702134576872,"user_tz":0,"elapsed":5,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"c24a69d0-b36f-4b4c-b54b-c9bf9878f4cf"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 20345 entries, 0 to 20344\n","Data columns (total 5 columns):\n"," #   Column        Non-Null Count  Dtype \n","---  ------        --------------  ----- \n"," 0   question      20345 non-null  object\n"," 1   categories    20345 non-null  object\n"," 2   description   4533 non-null   object\n"," 3   PollOptions   20345 non-null  object\n"," 4   all_comments  18928 non-null  object\n","dtypes: object(5)\n","memory usage: 794.9+ KB\n"]}]},{"cell_type":"code","source":["df.question.iloc[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"pA5lvSAPS_HK","executionInfo":{"status":"ok","timestamp":1702134576872,"user_tz":0,"elapsed":4,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"6c4a84b5-a12e-4ddd-c2d6-9e9a4243d48a"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"Choose wisely are you scared of english \\n(The option's aren't normal)\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jXHIJ9_fTzaJ","executionInfo":{"status":"ok","timestamp":1702134576872,"user_tz":0,"elapsed":4,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"2cadf711-669a-4043-b1e1-b7d9d42daec5"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['question', 'categories', 'description', 'PollOptions', 'all_comments'], dtype='object')"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df = df.fillna(\"\")"],"metadata":{"id":"YwgwZUQSIUh9","executionInfo":{"status":"ok","timestamp":1702134645520,"user_tz":0,"elapsed":2,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["def merger(x):\n","\n","  temp = [x.question]\n","  temp.append(x.categories)\n","  if x.description != \"\":  temp.append(x.description)\n","  if len(x.PollOptions.split(\"|\"))>0 : temp.extend(x.PollOptions.split(\"|\"))\n","  temp.extend(sent_tokenize(x.all_comments))\n","\n","  temp = [str(x).lower() for x in temp]\n","\n","  return temp"],"metadata":{"id":"VBewC8hACOQh","executionInfo":{"status":"ok","timestamp":1702134657465,"user_tz":0,"elapsed":188,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["df['merged'] = df.apply(lambda x : merger(x),axis=1)"],"metadata":{"id":"WhmleQ8lT9sr","executionInfo":{"status":"ok","timestamp":1702134661382,"user_tz":0,"elapsed":3620,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["df.sample(1).merged.values[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hjPVDgCVC9Ow","executionInfo":{"status":"ok","timestamp":1702134670857,"user_tz":0,"elapsed":185,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"9ded516d-9248-436d-ace3-0ca84421d8e3"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['what kind of relationship you like',\n"," 'dating and relationships',\n"," 'fwb',\n"," 'gf/bf',\n"," 'casual',\n"," \"casual date fil hal anyone up for date  koi bhi  koi bhi chlegi  friendship with heart (not selfish one's) none of the above.\",\n"," 'no need to give name to a relationship.',\n"," 'i believe in love.',\n"," 'causual  fwb, gf/bf, casual?',\n"," 'why choose one, when you can have all three?',\n"," 'gf all the above']"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["corpus = df[['merged']].copy()"],"metadata":{"id":"CajH-0jYW4qR","executionInfo":{"status":"ok","timestamp":1702134672333,"user_tz":0,"elapsed":210,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["corpus.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"XPa0ROqHXIEb","executionInfo":{"status":"ok","timestamp":1702134673379,"user_tz":0,"elapsed":200,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"6f89cb62-4881-44b3-d1fc-633454901a78"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                              merged\n","0  [choose wisely are you scared of english \\n(th...\n","1  [chicken biryani me aaloo?, food and drinks, b...\n","2  [who is ur favourite\\nand whom u wanna smash i...\n","3  [what is love??, dating and relationships, nth...\n","4  [hello everyone, lifestyle, .., ., hm kyaðŸ™„ jai..."],"text/html":["\n","  <div id=\"df-40808258-108c-45ae-a83e-c810e74391d1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>merged</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>[choose wisely are you scared of english \\n(th...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>[chicken biryani me aaloo?, food and drinks, b...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>[who is ur favourite\\nand whom u wanna smash i...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>[what is love??, dating and relationships, nth...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>[hello everyone, lifestyle, .., ., hm kyaðŸ™„ jai...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-40808258-108c-45ae-a83e-c810e74391d1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-40808258-108c-45ae-a83e-c810e74391d1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-40808258-108c-45ae-a83e-c810e74391d1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-44b5f73f-4814-4ecc-ba23-dccfc88cffb0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-44b5f73f-4814-4ecc-ba23-dccfc88cffb0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-44b5f73f-4814-4ecc-ba23-dccfc88cffb0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","source":["### Data"],"metadata":{"id":"Uu7KGlKEICNi"}},{"cell_type":"code","source":["corpus_text = []\n","i =0\n","for row in corpus.merged :\n","  corpus_text.extend(row)\n","\n","tok_corpus = [word_tokenize(sent) for sent in corpus_text]"],"metadata":{"id":"xM-JNeYyFlsy","executionInfo":{"status":"ok","timestamp":1702134957324,"user_tz":0,"elapsed":19352,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["tok_corpus [0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_Bt42MfPJEUr","executionInfo":{"status":"ok","timestamp":1702135242095,"user_tz":0,"elapsed":4,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"c6ac143c-9fa7-4e4d-e834-5f4b543d8ef2"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['choose',\n"," 'wisely',\n"," 'are',\n"," 'you',\n"," 'scared',\n"," 'of',\n"," 'english',\n"," '(',\n"," 'the',\n"," 'option',\n"," \"'s\",\n"," 'are',\n"," \"n't\",\n"," 'normal',\n"," ')']"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["sentences = tok_corpus.copy()"],"metadata":{"id":"GKYx2VwnGLXL","executionInfo":{"status":"ok","timestamp":1702135019248,"user_tz":0,"elapsed":223,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["import multiprocessing\n","\n","from gensim.models import Word2Vec\n","\n","cores = multiprocessing.cpu_count() # Count the number of cores in a computer\n","\n","\n","w2v_model = Word2Vec(min_count=20,\n","                     window=2,\n","                    #  size=300,\n","                     sample=6e-5,\n","                     alpha=0.03,\n","                     min_alpha=0.0007,\n","                     negative=20,\n","                     workers=cores-1)"],"metadata":{"id":"dpdd1sFuEgWn","executionInfo":{"status":"ok","timestamp":1702135020749,"user_tz":0,"elapsed":2,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["t = time.time()\n","\n","w2v_model.build_vocab(sentences, progress_per=10000)\n","\n","print('Time to build vocab: {} mins'.format(round((time.time() - t) / 60, 2)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xAzgQanjEgSt","executionInfo":{"status":"ok","timestamp":1702135042104,"user_tz":0,"elapsed":1540,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"179bb314-6860-4f7c-a586-b913daaf1eda"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:gensim.models.keyedvectors:sorting after vectors have been allocated is expensive & error-prone\n"]},{"output_type":"stream","name":"stdout","text":["Time to build vocab: 0.02 mins\n"]}]},{"cell_type":"code","source":["t = time.time()\n","\n","w2v_model.train(sentences, total_examples=w2v_model.corpus_count, epochs=30, report_delay=1)\n","\n","print('Time to train the model: {} mins'.format(round((time.time() - t) / 60, 2)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E6ihUk7RHuIA","executionInfo":{"status":"ok","timestamp":1702135131625,"user_tz":0,"elapsed":75724,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"91107343-45bf-44ba-86dd-9f47ee16aa85"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["Time to train the model: 1.26 mins\n"]}]},{"cell_type":"code","source":["# Function to get the vector representation of a text\n","def get_vector(text):\n","    return word2vec_model.wv[text]"],"metadata":{"id":"pCMkmsCHIsFA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","# Apply the function to create a new column with Word2Vec embeddings\n","df['word2vec_embeddings'] = df['tokenized_text'].apply(lambda x: [get_vector(word) for word in x])"],"metadata":{"id":"2fBtKi0fK1Vc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"A4y9K1pmIsAh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a"],"metadata":{"id":"qY2KfXUHPt19"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"EHejz3e0Ptzl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"cqzWdEvyPtxP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"1yKH0zMmPtui"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"iHiBJRz1Ptrr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["aa"],"metadata":{"id":"QkcpvWlQPtjs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"EZG9OwKyPtgn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a"],"metadata":{"id":"LVOrz_ftEgPE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# def preprocess(x):\n","\n","#     #Lemmatization\n","#     x = ' '.join([lemmer.lemmatize(w,'v') for w in x.rstrip().split()])\n","\n","#     # Lower case\n","#     x = x.lower()\n","\n","#     # Remove punctuation & emoji\n","#     x = re.sub(r'[^\\w\\s]', '', x)\n","\n","#     return x\n","\n","# corpus['clean'] = corpus['merged'].apply(preprocess)"],"metadata":{"id":"PPj8GhJwWUnn","executionInfo":{"status":"ok","timestamp":1702069294078,"user_tz":0,"elapsed":14872,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["# # Function to remove punctuation\n","# def remove_punctuation(text):\n","#     return text.translate(str.maketrans('', '', string.punctuation))\n","\n","# # Apply punctuation removal & convert to lowercase\n","# df['cleaned_text'] = df['merged'].apply(lambda x: remove_punctuation(x.lower()))\n","\n","# # Make Corpus\n","# all_text = (' '.join(df['cleaned_text']))\n","# # Function to remove punctuation and stopwords, and tokenize text\n","# def preprocess_text(text):\n","\n","#     # Tokenize\n","#     tokens = word_tokenize(text)\n","\n","#     # Remove stopwords\n","#     stop_words = set(stopwords.words('english'))\n","#     tokens = [word.encode('utf-8') for word in tokens if word not in stop_words]\n","\n","#     return tokens\n","\n","# # Apply text preprocessing to the concatenated text\n","# tokenized_text = preprocess_text(all_text)"],"metadata":{"id":"JIZN50XK62hZ","executionInfo":{"status":"ok","timestamp":1702069339584,"user_tz":0,"elapsed":5356,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["# tokenized_text"],"metadata":{"id":"JEOnxkEyIyFT","executionInfo":{"status":"ok","timestamp":1702069344822,"user_tz":0,"elapsed":207,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["# # Set up and train the Word2Vec model\n","# word2vec_model = Word2Vec(sentences=tokenized_text, vector_size=100, window=2, min_count=1, workers=4)"],"metadata":{"id":"ElHBgWlfFxkM","executionInfo":{"status":"ok","timestamp":1702069359626,"user_tz":0,"elapsed":14514,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["# # Apply tokenization removal\n","# df['tokenized_text'] = df['cleaned_text'].apply(lambda x: preprocess_text(x))"],"metadata":{"id":"8CdmDeFxIrOP","executionInfo":{"status":"ok","timestamp":1702069369975,"user_tz":0,"elapsed":9430,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["# # Function to get the vector representation of a text\n","# def get_vector(text):\n","#     return word2vec_model.wv[text]"],"metadata":{"id":"4qSSUnxiI4Ji","executionInfo":{"status":"ok","timestamp":1702069371938,"user_tz":0,"elapsed":205,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}}},"execution_count":23,"outputs":[]}]}